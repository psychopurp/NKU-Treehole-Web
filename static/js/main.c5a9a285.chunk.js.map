{"version":3,"sources":["config/index.ts","components/Loading/index.tsx","router/router.ts","router/utils.ts","components/NoticeService/index.tsx","App.tsx","config/theme.ts","index.tsx"],"names":["AppConfig","BASENAME","SUCCESS_CODE","LOGIN_EXPIRE","API_URL","TOKEN_KEY","layout","fixedHeader","contentWidth","colorWeak","title","useStyles","makeStyles","root","display","flexDirection","alignItems","justifyContent","height","Loading","classes","className","routes","path","component","React","lazy","redirect","children","flattenRoute","deep","auth","result","i","length","route","exact","push","layoutRoutes","systemRoutes","tmpRoutes","filter","getSystemRoutes","businessRoutes","getBusinessRoutes","NoticeServiceContext","createContext","Promise","reject","useNoticeService","useContext","NoticeServiceProvider","useState","noticeState","setNoticeState","awaitingPromiseRef","useRef","Provider","value","options","resolve","current","open","type","onClose","event","reason","snackBarOptions","App","fallback","basename","config","map","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","typography","ReactDOM","render","NoticeService","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c5a9a285.chunk.js","sourcesContent":["export interface Config {\n  BASENAME?: string;\n\n  SUCCESS_CODE: number;\n\n  LOGIN_EXPIRE: number;\n\n  API_URL: string;\n\n  TOKEN_KEY: string;\n\n  layout: \"side\" | \"top\";\n\n  fixedHeader: boolean;\n\n  contentWidth: \"fluid\" | \"fixed\";\n\n  colorWeak: boolean;\n\n  title: string;\n\n  logo?: string;\n}\n\nconst AppConfig: Config = {\n  // react-router basename\n  BASENAME: \"/\",\n\n  // 请求成功状态码\n  SUCCESS_CODE: 200,\n\n  // 登录过期，或者未登录\n  LOGIN_EXPIRE: 400,\n\n  // 统一请求地址\n  API_URL: \"http://localhost:7788/treehole-api\",\n\n  // 本地存储token 的key\n  TOKEN_KEY: \"token\",\n\n  // 默认菜单栏位置\n  layout: \"side\",\n\n  // 是否固定头部\n  fixedHeader: false,\n\n  // 固定宽度或者流式宽度\n  contentWidth: \"fixed\",\n\n  // 是否开启色弱模式\n  colorWeak: false,\n\n  // 项目名称\n  title: \"NKU Treehole\",\n\n  // logo\n};\n\nexport default AppConfig;\n","import { Box, CircularProgress, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // backgroundColor: \"#fff333\",\n    height: \"80vh\",\n  },\n});\n\nconst Loading = (): React.ReactElement => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <CircularProgress />\n    </Box>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nexport interface IRouteBase {\n  // 路由路径\n  path: string;\n  // 路由组件\n  component?: any;\n  // 302 跳转\n  redirect?: string;\n  // 路由信息\n  meta?: IRouteMeta;\n  // 是否校验权限, false 为不校验, 不存在该属性或者为true 为校验, 子路由会继承父路由的 auth 属性\n  auth?: boolean;\n  exact?: boolean;\n  strict?: boolean;\n}\n\nexport interface IRouteMeta {\n  title: string;\n  icon?: string;\n}\nexport interface IRoute extends IRouteBase {\n  children?: IRoute[];\n}\n\n/**\n * routes 第一级路由负责最外层的路由渲染，比如 userLayout 和 Layout 的区分\n * 所有系统内部存在的页面路由都要在此地申明引入\n */\n\nconst routes: IRoute[] = [\n  {\n    path: \"/system\",\n    component: React.lazy(() => import(\"../layout/SystemLayout\")),\n    redirect: \"/system/login\",\n    children: [\n      {\n        path: \"/system/login\",\n        component: React.lazy(() => import(\"../pages/Login\")),\n      },\n      {\n        path: \"/system/register\",\n        component: React.lazy(() => import(\"../pages/Profile\")),\n      },\n    ],\n  },\n  {\n    path: \"/welcome\",\n    component: React.lazy(() => import(\"../pages/Welcome\")),\n  },\n  {\n    path: \"/\",\n    component: React.lazy(() => import(\"../layout/index\")),\n    redirect: \"/index/home\",\n    children: [\n      {\n        path: \"/index/home\",\n        component: React.lazy(() => import(\"../pages/Home\")),\n      },\n      {\n        path: \"/index/profile\",\n        component: React.lazy(() => import(\"../pages/Profile\")),\n      },\n    ],\n  },\n];\n\nexport default routes;\n\nexport const renderRoutes = (routeList: IRoute[]) => {};\n","import routes, { IRoute } from \"./router\";\n\n/**\n *\n * 将路由转换为一维数组\n * @param routes 路由\n * @param deep 是否深层转化\n * @param auth 路由是否需要检查授权, 路由配置的auth优先级比这里高\n */\nexport function flattenRoute(\n  routes: IRoute[],\n  deep: boolean,\n  auth: boolean\n): IRoute[] {\n  const result: IRoute[] = [];\n\n  for (let i = 0; i < routes.length; i += 1) {\n    const route = routes[i];\n\n    let exact =\n      typeof route.exact !== \"undefined\"\n        ? route.exact\n        : typeof route.children !== \"undefined\"\n        ? false // 有子节点需要设置为 exact=false\n        : true;\n\n    result.push({\n      ...route,\n      auth: typeof route.auth !== \"undefined\" ? route.auth : auth,\n      exact: exact,\n    });\n\n    if (route.children && deep) {\n      result.push(...flattenRoute(route.children, deep, auth));\n    }\n  }\n  return result;\n}\n\nfunction getLayoutRoutes(): IRoute[] {\n  let r = flattenRoute(routes, false, false);\n  return r;\n}\n\nfunction getSystemRoutes(): IRoute[] {\n  const tmpRoutes = routes.filter((route) => route.path === \"/system\");\n  if (tmpRoutes.length > 0) {\n    let r = flattenRoute(tmpRoutes, true, false);\n\n    return r;\n  }\n  return [];\n}\n\nfunction getBusinessRoutes(): IRoute[] {\n  const tmpRoutes = routes.filter((route) => route.path === \"/\");\n  if (tmpRoutes.length > 0) {\n    let r = flattenRoute(tmpRoutes, true, true);\n    return r;\n  }\n  return [];\n}\n\n/**\n * 这里会将 config 中所有路由解析成三个数组\n * 第一个: 最外层的路由，例如  Layout UserLayout ...\n * 第二个: 系统路由, 例如 Login Register RegisterResult\n * 第三个: 业务路由，为 / 路由下的业务路由\n */\n\nexport const layoutRoutes = getLayoutRoutes();\n\nexport const systemRoutes = getSystemRoutes();\n\nexport const businessRoutes = getBusinessRoutes();\n","import React, { useState } from \"react\";\nimport { Snackbar, SnackbarProps, DialogProps } from \"@material-ui/core\";\nimport ReactDOM from \"react-dom\";\n\nclass DomController {\n  static appendChild(child: React.ReactElement): HTMLElement {\n    let div: HTMLElement = document.createElement(\"div\");\n    document.body.appendChild(div);\n    ReactDOM.render(child, div);\n    return div;\n  }\n\n  static removeChild(node: HTMLElement): void {\n    ReactDOM.unmountComponentAtNode(node);\n    document.body.removeChild(node);\n  }\n}\n\ntype Closer = () => void;\ntype ClosableElement = (closer: Closer) => React.ReactElement;\n\ninterface NoticeService {\n  showSnackBar(element: ClosableElement): void;\n  showDialog(element: ClosableElement): void;\n}\n\nconst noticeService: NoticeService = {\n  showSnackBar(element: ClosableElement) {\n    let n = DomController.appendChild(\n      element(() => {\n        DomController.removeChild(n);\n      })\n    );\n  },\n\n  showDialog(element: ClosableElement) {},\n};\n\nexport default noticeService;\n\ninterface NoticeServiceOptions {\n  type: \"SnackBar\" | \"Dialog\";\n  snackBarOptions?: SnackbarProps;\n  dialogOptions?: DialogProps;\n}\n\nconst NoticeServiceContext = React.createContext<\n  (options: NoticeServiceOptions) => Promise<void>\n>(Promise.reject);\n\nexport const useNoticeService = () => React.useContext(NoticeServiceContext);\n\nexport const NoticeServiceProvider: React.FC = ({ children }) => {\n  const [noticeState, setNoticeState] =\n    useState<NoticeServiceOptions | null>(null);\n\n  const awaitingPromiseRef =\n    React.useRef<{\n      resolve: () => void;\n      reject: () => void;\n    }>();\n\n  const runContext = (options: NoticeServiceOptions) => {\n    setNoticeState(options);\n    return new Promise<void>((resolve, reject) => {\n      awaitingPromiseRef.current = { resolve, reject };\n    });\n  };\n\n  function closeSnackBar(event?: React.SyntheticEvent, reason?: string) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setNoticeState(null);\n  }\n\n  return (\n    <>\n      <NoticeServiceContext.Provider value={runContext} children={children} />\n\n      <Snackbar\n        open={noticeState?.type === \"SnackBar\"}\n        onClose={closeSnackBar}\n        {...noticeState?.snackBarOptions}\n      ></Snackbar>\n    </>\n  );\n};\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { layoutRoutes } from \"./router/utils\";\nimport config from \"./config\";\nimport React, { Suspense } from \"react\";\nimport Loading from \"./components/Loading\";\nimport { IRoute } from \"./router/router\";\n\nconst App: React.FC = () => {\n  return (\n    <Suspense fallback={Loading()}>\n      <Router basename={config.BASENAME}>\n        {/* <ul>\n          {layoutRoutes.map((route: IRoute, i) => (\n            <li key={i}>\n              {\" \"}\n              <Link to={route.path}>{route.path} </Link>\n            </li>\n          ))}\n        </ul> */}\n        <Switch>\n          {layoutRoutes.map((route: IRoute, i: number) => (\n            <Route\n              exact={route.exact}\n              key={route.path}\n              path={route.path}\n              component={route.component}\n            ></Route>\n          ))}\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n};\n\nexport default App;\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#13d6be\",\n    },\n    secondary: {\n      main: \"#56ddcc\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n    type: \"light\",\n  },\n\n  typography: {},\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./config/theme\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { NoticeServiceProvider } from \"./components/NoticeService\";\n\nReactDOM.render(\n  <NoticeServiceProvider>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </NoticeServiceProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}