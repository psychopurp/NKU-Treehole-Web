{"version":3,"sources":["utils/cookie.ts","config/axios.ts","api/userService.ts","components/CustomSnackBar/index.tsx","components/CustomSnackBar/index.module.less","api/postService.ts","components/AppBar/index.tsx","pages/Home/index.module.less","pages/Home/index.tsx"],"names":["setToken","token","cookie","set","config","TOKEN_KEY","getToken","get","removeToken","remove","request","options","axios","defaults","headers","baseURL","interceptors","use","error","Promise","reject","response","console","log","data","code","AppConfig","LOGIN_EXPIRE","Error","msg","SUCCESS_CODE","resolve","setRequestMethod","method","apiUserLogin","a","url","apiUserRegister","CustomSnackBar","success","duration","autoHideDuration","anchorOrigin","vertical","horizontal","children","className","styles","root","icon","fontSize","severity","module","exports","apiCreatePost","apiGetPosts","params","CustomAppBar","title","props","appbar","position","variant","Home","useState","dataList","setDataList","page","setPage","noMore","setNoMore","notice","useNoticeService","useRequest","manual","onSuccess","concat","list","total","onError","type","snackBarOptions","message","run","onPullup","loading","onPullDown","limit","wrapRef","useRef","useEffect","appBar","main","ref","pullDownRefresh","pullUpLoad","map","item","idx","PostItem","postItem","row","avatar","alt","username","slice","src","column","style","fontWeight","color","display","gutterBottom","createdAt","content"],"mappings":"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","file":"static/js/9.dffd2372.chunk.js","sourcesContent":["import cookie from \"js-cookie\";\nimport config from \"../config\";\n\nexport const setToken = (token: string) => cookie.set(config.TOKEN_KEY, token);\n\nexport const getToken: () => string = () => cookie.get(config.TOKEN_KEY) || \"\";\n\nexport const removeToken = () => cookie.remove(config.TOKEN_KEY);\n","import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from \"axios\";\nimport AppConfig from \".\";\nimport { getToken } from \"../utils/cookie\";\n\nexport interface ResponseData<T> {\n  code: number;\n  msg: string;\n  data: T;\n}\n\n// 指定 axios 请求类型\n\naxios.defaults.headers = {\n  \"Content-Type\": \"application/json;charset=utf-8\",\n};\n\naxios.defaults.baseURL = \"/api\";\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    const token = getToken();\n    if (token) {\n      config.headers.token = token;\n    }\n\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error)\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    console.log(response);\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n\n    // 登录已过期或者未登录\n    if (response.data.code === AppConfig.LOGIN_EXPIRE) {\n      //   Modal.confirm({\n      //     title: \"系统提示\",\n      //     content: response.data.msg,\n      //     okText: \"重新登录\",\n      //     onOk() {\n      //       store.dispatch(clearSideBarRoutes());\n      //       store.dispatch(logout());\n      //       window.location.href = `${\n      //         window.location.origin\n      //       }/react-ant-admin/system/login?redirectURL=${encodeURIComponent(\n      //         window.location.href\n      //       )}`;\n      //     },\n      //     onCancel() {},\n      //   });\n\n      return Promise.reject(new Error(response.data.msg));\n    }\n\n    // 请求成功\n    if (response.data.code === AppConfig.SUCCESS_CODE) {\n      return response.data as any;\n    }\n\n    // 请求成功，状态不为成功时\n    // message.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    // message.error(error.message);\n\n    return Promise.reject(error);\n  }\n);\n\n// 统一发起请求的函数\nexport default function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { Method } from \"axios\";\nimport request from \"../config/axios\";\nimport { UserState } from \"../store/useUserModel\";\nimport { Utils } from \"../utils/func\";\n\n// interface PlainObject {}\n\nexport interface UserLoginData {\n  email: string; //邮箱\n  password: string;\n}\n\nexport interface UserRegisterData {\n  email: string; // 邮箱\n  password: string;\n  username: string;\n}\n\nexport const isMockEnv = () => false;\n\nexport const setRequestMethod = (method: Method): Method => {\n  if (isMockEnv()) {\n    return \"GET\";\n  }\n  return method;\n};\n\nexport async function apiUserLogin(data: UserLoginData) {\n  // await Utils.Sleep(500);\n  return request<UserState>({\n    method: setRequestMethod(\"POST\"),\n    url: \"/user/login\",\n    data: data,\n  });\n}\n\nexport async function apiUserRegister(data: UserRegisterData) {\n  // await Utils.Sleep(500);\n  return request<UserState>({\n    method: setRequestMethod(\"POST\"),\n    url: \"/user/register\",\n    data: data,\n  });\n}\n","import Alert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport styles from \"./index.module.less\";\n\nconst CustomSnackBar = (\n  msg: string = \"Success !\",\n  success: boolean = true,\n  duration: number = 600\n): SnackbarProps => {\n  return {\n    autoHideDuration: duration,\n    anchorOrigin: { vertical: \"bottom\", horizontal: \"center\" },\n    children: (\n      <div className={styles.root}>\n        <Alert\n          icon={<CheckIcon fontSize=\"inherit\" />}\n          severity={success ? \"success\" : \"error\"}\n        >\n          {msg}\n        </Alert>\n      </div>\n    ),\n  };\n};\n\nexport default CustomSnackBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index_root__2hp4C\"};","import { Method } from \"axios\";\nimport request from \"../config/axios\";\nimport { UserState } from \"../store/useUserModel\";\nimport { Utils } from \"../utils/func\";\nimport { setRequestMethod } from \"./userService\";\nimport { PageQueryParams, QueryListResponseData } from \"../types\";\n\ninterface PlainObject {}\n\nexport interface CreatePostData {\n  content: string;\n}\n\nexport interface Post {\n  postId: number;\n  avatar: string;\n  username: string;\n  userId: string;\n  createdAt: string;\n  content: string;\n}\n\nexport async function apiCreatePost(data: CreatePostData) {\n  // await Utils.Sleep(500);\n  return request<PlainObject>({\n    method: setRequestMethod(\"POST\"),\n    url: \"/post/createPost\",\n    data: data,\n  });\n}\n\nexport async function apiGetPosts(data: PageQueryParams) {\n  // await Utils.Sleep(500);\n  return request<QueryListResponseData<Post>>({\n    method: setRequestMethod(\"GET\"),\n    url: \"/post/getPosts\",\n    params: data,\n  });\n}\n","import React, { useEffect, useRef } from \"react\";\nimport AppBar, { AppBarProps as ABProps } from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport styles from \"./index.module.less\";\n\nexport interface AppBarProps extends ABProps {\n  title: string;\n}\n\nconst CustomAppBar: React.FC<AppBarProps> = ({ title, ...props }) => {\n  // const appBar = useRef<HTMLElement>(null);\n  // const height = useRef<string>(\"\");\n  // useEffect(() => {\n  //   console.log(appBar.current?.clientHeight);\n  //   if (appBar.current?.clientHeight) {\n  //     height.current = `${appBar.current.clientHeight}px`;\n  //   }\n  // }, []);\n\n  return (\n    <div>\n      <AppBar {...props} className={styles.appbar} position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"subtitle1\">{title}</Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default CustomAppBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index_root___P7dc\",\"main\":\"index_main__2M2Qk\",\"postItem\":\"index_postItem__1kOQQ\",\"row\":\"index_row__12FVz\",\"avatar\":\"index_avatar__l6LCC\",\"content\":\"index_content__3KnS0\"};","import Appbar from \"../../components/AppBar\";\nimport styles from \"./index.module.less\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { apiGetPosts, Post } from \"../../api/postService\";\nimport { useRequest } from \"ahooks\";\nimport { useNoticeService } from \"../../components/NoticeService\";\nimport { PageQueryParams } from \"../../types\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\nimport { Avatar, Divider, Typography } from \"@material-ui/core\";\nimport { Utils } from \"../../utils/func\";\n\nimport Scroll from \"react-scroll-mobile\";\n\nexport interface HomeProps {}\n\nconst Home: React.FC = () => {\n  const [dataList, setDataList] = useState<Post[]>([]);\n  const [page, setPage] = useState<number>(0);\n  const [noMore, setNoMore] = useState<boolean>(false);\n  const notice = useNoticeService();\n\n  const { run, loading } = useRequest(apiGetPosts, {\n    manual: true,\n    onSuccess: ({ data }, params: [param: PageQueryParams]) => {\n      setDataList(dataList.concat(data.list));\n\n      if (page + 1 < data.total) {\n        setPage(page + 1);\n      } else {\n        setNoMore(true);\n        console.log(\"set nomore\");\n      }\n      // console.log(data, params, page, dataList);\n    },\n    onError: (error) => {\n      console.log(error);\n      notice({\n        type: \"SnackBar\",\n        snackBarOptions: { ...CustomSnackBar(error.message, false) },\n      });\n    },\n  });\n\n  const onPullup = async () => {\n    console.log(\"onpullup\");\n    // setPage(1);\n    // await Utils.Sleep(5000);\n    // await run({ page: page, limit: 20 });\n  };\n  const onPullDown = async () => {\n    console.log(\"pulldown\");\n    setPage(0);\n    await run({ page: page, limit: 20 });\n    // await Utils.Sleep(5000);\n  };\n\n  const wrapRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    console.log(\"using effect\");\n    run({ page: page, limit: 20 });\n  }, [page, run]);\n\n  return (\n    <div className={styles.root}>\n      <Appbar title=\"首页\" className={styles.appBar} />\n\n      <div className={styles.main}>\n        <Scroll\n          ref={wrapRef}\n          pullDownRefresh={onPullDown}\n          pullUpLoad={onPullup}\n          noMore={noMore}\n          // backTop\n        >\n          {dataList.map((item, idx) => (\n            <div key={idx}>\n              <PostItem {...item} />\n            </div>\n          ))}\n        </Scroll>\n\n        {/* <Scroll\n          wrapHeight=\"84vh\"\n          onPullup={onPullup}\n          onPulldown={handlePullDown}\n        >\n          {dataList.map((item, idx) => (\n            <div key={idx}>\n              <PostItem {...item} />\n            </div>\n          ))}\n        </Scroll> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\nconst PostItem: React.FC<Post> = (item) => {\n  return (\n    <div className={styles.postItem}>\n      <div className={styles.row}>\n        {item.avatar === \"\" ? (\n          <Avatar alt=\"Avatar\" className={styles.avatar}>\n            {item.username.slice(0, 2)}\n          </Avatar>\n        ) : (\n          <Avatar alt=\"Avatar\" src={item.avatar} className={styles.avatar} />\n        )}\n\n        <div className={styles.column}>\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\n            {item.username}\n          </Typography>\n          <Typography\n            style={{ color: \"grey\", fontWeight: \"lighter\" }}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            {item.createdAt.slice(0, 19)}\n          </Typography>\n        </div>\n      </div>\n\n      <Typography className={styles.content}>{item.content}</Typography>\n      <Divider variant=\"fullWidth\" />\n    </div>\n  );\n};\n"],"sourceRoot":""}